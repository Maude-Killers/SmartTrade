// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartTrade.Models.Gallery", b =>
                {
                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<int?>("Category_name")
                        .HasColumnType("integer");

                    b.Property<int?>("Product_code")
                        .HasColumnType("integer");

                    b.HasKey("Image");

                    b.ToTable("Gallery");

                    b.HasData(
                        new
                        {
                            Image = "https://i.imgur.com/WtfQOF3.png",
                            Product_code = 1
                        },
                        new
                        {
                            Image = "https://i.imgur.com/bRFgYfL.png",
                            Product_code = 2
                        },
                        new
                        {
                            Image = "https://i.imgur.com/0kTxfNT.png",
                            Product_code = 3
                        },
                        new
                        {
                            Image = "https://i.imgur.com/tewVKu5.png",
                            Product_code = 4
                        },
                        new
                        {
                            Image = "https://i.imgur.com/VcVlhzr.png",
                            Product_code = 5
                        },
                        new
                        {
                            Image = "https://i.imgur.com/9ZpZZfe.png",
                            Product_code = 6
                        },
                        new
                        {
                            Image = "https://i.imgur.com/YgKapTz.png",
                            Product_code = 7
                        },
                        new
                        {
                            Image = "https://i.imgur.com/kgj7C77.png",
                            Product_code = 8
                        },
                        new
                        {
                            Image = "https://i.imgur.com/ATQsdPb.png",
                            Product_code = 9
                        },
                        new
                        {
                            Image = "https://i.imgur.com/ADMjfOX.png",
                            Product_code = 10
                        },
                        new
                        {
                            Image = "https://i.imgur.com/IMMlRaG.png",
                            Product_code = 11
                        },
                        new
                        {
                            Image = "https://i.imgur.com/qNLCqrT.png",
                            Product_code = 12
                        },
                        new
                        {
                            Image = "https://i.imgur.com/qImnFwc.png",
                            Product_code = 13
                        },
                        new
                        {
                            Image = "https://i.imgur.com/icpDfTu.png",
                            Product_code = 14
                        },
                        new
                        {
                            Image = "https://i.imgur.com/B9UeUnE.png",
                            Product_code = 15
                        },
                        new
                        {
                            Image = "https://www.timeshighereducation.com/student/sites/default/files/styles/default/public/different_sports.jpg",
                            Category_name = 2
                        },
                        new
                        {
                            Image = "https://hips.hearstapps.com/hmg-prod/images/online-buying-and-delivery-concept-royalty-free-image-1675370119.jpg",
                            Category_name = 1
                        },
                        new
                        {
                            Image = "https://miro.medium.com/v2/resize:fit:720/format:webp/1*f9N5gbBNXLGqD7NgjzVg5g.jpeg",
                            Category_name = 0
                        });
                });

            modelBuilder.Entity("SmartTrade.Models.Product", b =>
                {
                    b.Property<int>("Product_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Product_code"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Features")
                        .HasColumnType("text");

                    b.Property<int>("Huella")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Product_code");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SmartTrade.Models.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 4, 11, 18, 32, 51, 525, DateTimeKind.Utc).AddTicks(6740),
                            TemperatureC = 40
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 4, 12, 18, 32, 51, 525, DateTimeKind.Utc).AddTicks(6764),
                            TemperatureC = 51
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 4, 13, 18, 32, 51, 525, DateTimeKind.Utc).AddTicks(6765),
                            TemperatureC = 36
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 4, 14, 18, 32, 51, 525, DateTimeKind.Utc).AddTicks(6765),
                            TemperatureC = 18
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 4, 15, 18, 32, 51, 525, DateTimeKind.Utc).AddTicks(6766),
                            TemperatureC = 18
                        });
                });

            modelBuilder.Entity("SmartTrade.Models.GroceryProduct", b =>
                {
                    b.HasBaseType("SmartTrade.Models.Product");

                    b.HasDiscriminator().HasValue("GroceryProduct");

                    b.HasData(
                        new
                        {
                            Product_code = 6,
                            Category = "Grocery",
                            Description = "descripcion6",
                            Features = "caracteristicas6",
                            Huella = -2,
                            Name = "product6",
                            Price = 16f
                        },
                        new
                        {
                            Product_code = 7,
                            Category = "Grocery",
                            Description = "descripcion7",
                            Features = "caracteristicas7",
                            Huella = 52,
                            Name = "product7",
                            Price = 17f
                        },
                        new
                        {
                            Product_code = 8,
                            Category = "Grocery",
                            Description = "descripcion8",
                            Features = "caracteristicas8",
                            Huella = -17,
                            Name = "product8",
                            Price = 18f
                        },
                        new
                        {
                            Product_code = 9,
                            Category = "Grocery",
                            Description = "descripcion9",
                            Features = "caracteristicas9",
                            Huella = -5,
                            Name = "product9",
                            Price = 19f
                        },
                        new
                        {
                            Product_code = 10,
                            Category = "Grocery",
                            Description = "descripcion10",
                            Features = "caracteristicas10",
                            Huella = 54,
                            Name = "product10",
                            Price = 20f
                        });
                });

            modelBuilder.Entity("SmartTrade.Models.SportProduct", b =>
                {
                    b.HasBaseType("SmartTrade.Models.Product");

                    b.HasDiscriminator().HasValue("SportProduct");

                    b.HasData(
                        new
                        {
                            Product_code = 1,
                            Category = "Sports",
                            Description = "descripcion1",
                            Features = "caracteristicas1",
                            Huella = 34,
                            Name = "product1",
                            Price = 11f
                        },
                        new
                        {
                            Product_code = 2,
                            Category = "Sports",
                            Description = "descripcion2",
                            Features = "caracteristicas2",
                            Huella = 51,
                            Name = "product2",
                            Price = 12f
                        },
                        new
                        {
                            Product_code = 3,
                            Category = "Sports",
                            Description = "descripcion3",
                            Features = "caracteristicas3",
                            Huella = 47,
                            Name = "product3",
                            Price = 13f
                        },
                        new
                        {
                            Product_code = 4,
                            Category = "Sports",
                            Description = "descripcion4",
                            Features = "caracteristicas4",
                            Huella = -5,
                            Name = "product4",
                            Price = 14f
                        },
                        new
                        {
                            Product_code = 5,
                            Category = "Sports",
                            Description = "descripcion5",
                            Features = "caracteristicas5",
                            Huella = 43,
                            Name = "product5",
                            Price = 15f
                        });
                });

            modelBuilder.Entity("SmartTrade.Models.TechnoProduct", b =>
                {
                    b.HasBaseType("SmartTrade.Models.Product");

                    b.HasDiscriminator().HasValue("TechnoProduct");

                    b.HasData(
                        new
                        {
                            Product_code = 11,
                            Category = "Techno",
                            Description = "descripcion11",
                            Features = "caracteristicas11",
                            Huella = 19,
                            Name = "product11",
                            Price = 21f
                        },
                        new
                        {
                            Product_code = 12,
                            Category = "Techno",
                            Description = "descripcion12",
                            Features = "caracteristicas12",
                            Huella = 13,
                            Name = "product12",
                            Price = 22f
                        },
                        new
                        {
                            Product_code = 13,
                            Category = "Techno",
                            Description = "descripcion13",
                            Features = "caracteristicas13",
                            Huella = 42,
                            Name = "product13",
                            Price = 23f
                        },
                        new
                        {
                            Product_code = 14,
                            Category = "Techno",
                            Description = "descripcion14",
                            Features = "caracteristicas14",
                            Huella = 53,
                            Name = "product14",
                            Price = 24f
                        },
                        new
                        {
                            Product_code = 15,
                            Category = "Techno",
                            Description = "descripcion15",
                            Features = "caracteristicas15",
                            Huella = 0,
                            Name = "product15",
                            Price = 25f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
