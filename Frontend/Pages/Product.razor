@inject ProductService service;
@page "/product/{product_code}"

<main class="grid grid-cols-2 justify-items-center">
    <aside class="w-full">
        <div id="carousel" class="relative w-full" data-carousel="static">
            <!-- Carousel wrapper -->
            <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
                @foreach (var img in images)
                {
                    <ImageCarrousel ImgURL="@img" />
                }
            </div>
            <!-- Slider indicators -->
            <div class="absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
                @for (int i = 0; i <images.Count() ;i++)
                {
                    <button type="button" class="w-3 h-3 rounded-full" aria-current="true" aria-label=$"Slide {i}"
                            data-carousel-slide-to=$"{i}"></button>
                }
            </div>
            <!-- Slider controls -->
            <button type="button"
                class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
                data-carousel-prev>
                <span
                    class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-400/30 group-hover:bg-white/50 dark:group-hover:bg-gray-200/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                    <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M5 1 1 5l4 4" />
                    </svg>
                    <span class="sr-only">Previous</span>
                </span>
            </button>
            <button type="button"
                class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
                data-carousel-next>
                <span
                    class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-400/30 group-hover:bg-white/50 dark:group-hover:bg-gray-200/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                    <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m1 9 4-4-4-4" />
                    </svg>
                    <span class="sr-only">Next</span>
                </span>
            </button>
        </div>
    </aside>
    <aside class="block w-full p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800
        dark:border-gray-700">
        <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">@product.Name</h5>
        <p class="font-normal text-gray-700 dark:text-gray-400">@product.Description</p>
    </aside>
</main>

@code {
    [Parameter]
    public string product_code { get; set; }
    private SmartTrade.Models.Product product = new SmartTrade.Models.Product();

    private string[] images = Array.Empty<string>();

    protected override async Task OnInitializedAsync()
    {
        product = await service.GetProductAsync(int.Parse(product_code));
        images = await service.GetProductImagesAsync(int.Parse(product_code));
        StateHasChanged();
    }
}