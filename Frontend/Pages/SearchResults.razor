@inject ProductService service
@page "/results/{searchTerm}"


<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class="px-16 py-3">
                    <span class="sr-only">Image</span>
                </th>
                <th scope="col" class="px-6 py-3">
                    Product
                </th>
                <th scope="col" class="px-6 py-3">
                    Price
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < products.Count(); i++)
            {
                <SearchTableRow product="@products[i]" imgURL="images[i]" />
            }
        </tbody>
    </table>
</div>


@code {
    [Parameter]
    public string searchTerm { get; set; } = "";
    private SmartTrade.Models.Product[] products = Array.Empty<SmartTrade.Models.Product>();
    private string[] images = Array.Empty<string>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        products = await service.SearchProduct(searchTerm);
        // recuperar primera imagen de cada producto
        // images =
        StateHasChanged();
    }
}