@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using Fluxor
@using Frontend.Store
@inject IState<UserState> user
@inject IJSRuntime Js


<nav class="bg-white border-gray-200 dark:bg-gray-900">
    <div class="max-w-screen-2xl flex flex-wrap items-center justify-between mx-auto p-4">
        <NavLink href="" class="flex items-center space-x-3 rtl:space-x-reverse">
            <img src="https://flowbite.com/docs/images/logo.svg" class="h-8" alt="Flowbite Logo" />
            <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">SmartTrade</span>
        </NavLink>
        <SearchBar />

        <div class="items-center justify-between hidden md:flex md:w-auto md:order-2" id="navbar-user">
            <ul
                class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                <NavBarItem Name="Carrito" URI="/cart" />
                <span>

                    <button id="dropdowncategory" data-dropdown-delay="500" data-dropdown-toggle="dropdown"
                        class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group"
                        type="button">Categorias
                    </button>
                    <!-- Dropdown menu -->
                    <div id="dropdown"
                        class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
                        <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdowncategory">
                            <NavBarItem Name="Deportes" URI="category/Sport" />
                            <NavBarItem Name="Bodega" URI="category/Grocery" />
                            <NavBarItem Name="Tecnologia" URI="category/Technology" />
                        </ul>
                    </div>

                </span>
            </ul>
        </div>
        @if (!string.IsNullOrEmpty(user.Value.Name) && user.Value.IsValid)
        {
            <div id="dropdownHoverButton" data-dropdown-toggle="dropdownHover" data-dropdown-trigger="click"
                class="relative md:order-4 w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600">
                <svg class="absolute w-12 h-12 text-gray-400 -left-1" fill="currentColor" viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd">
                    </path>
                </svg>
            </div>
            <div id="dropdownHover"
                class="z-10 hidden md:order-4 bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
                <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownHoverButton">
                    <li>
                        <NavLink href="/wishlist"
                            class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Lista
                            deseos</NavLink>
                    </li>
                    <li>
                        <NavLink href="/giftlist"
                            class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Lista de
                            regalos</NavLink>
                    </li>
                    <li>
                        <NavLink href="/cart"
                            class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Carrito
                            de compra</NavLink>
                    </li>
                </ul>
            </div>
        }
        else
        {
            <span class="md:order-4">
                <NavBarItem Name="Iniciar sesiÃ³n" URI="login" />
            </span>
        }
    </div>
</nav>

@code {
    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        await Js.InvokeVoidAsync("window.initializeFlowbite");
    }
}