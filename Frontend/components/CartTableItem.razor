@inject NavigationManager NavigationManager
@inject ListService listService

<NavLink href="@($"/product/{product.Product_code}")" class="w-full contents text-center align-middle">
    <tr class=" bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
        <td class="p-4">
            <img src="@product.Images.First()" class="w-16 md:w-32 max-w-full max-h-full" alt="@product.Name">
        </td>
        <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
            @product.Name
        </td>
        <td class="px-6 py-4">
            <div class="flex items-center">
                <button @onclick="DecreaseQuantity"
                    class="inline-flex items-center justify-center p-1 me-3 text-sm font-medium h-6 w-6 text-gray-500 bg-white border border-gray-300 rounded-full focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                    type="button">
                    <span class="sr-only">Eliminar item</span>
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 18 2">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M1 1h16" />
                    </svg>
                </button>
                <div>
                    <span style="background-color: #2d3748; border: 1px solid #edf2f7; color: #e2e8f0;"
                        class="w-14 text-center text-gray-900 text-sm rounded-lg px-2.5 py-1 leading-none flex items-center">@quantity</span>
                </div>
                <button @onclick="IncreaseQuantity"
                    class="inline-flex items-center justify-center h-6 w-6 p-1 ms-3 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-full focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                    type="button">
                    <span class="sr-only">Agregar item</span>
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 18 18">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9 1v16M1 9h16" />
                    </svg>
                </button>
            </div>
        </td>
        <td class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
            @product.Price€
        </td>
        <td class="px-6 py-4">
            <button @onclick="MoveToLater" type="button"
                class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Guardar para más tarde</button>
        </td>
        <td class="px-6 py-4">
            <button @onclick="Remove" type="button"
                class="font-medium text-red-600 dark:text-red-500 hover:underline">Quitar</button>
        </td>
    </tr>
</NavLink>

@code {

    [Parameter]
    public Product product { get; set; } = new Product();

    [Parameter]
    public int quantity { get; set; } = 1;

    //[Parameter]
    //public EventCallback OnQuantityChanged{ get; set; }

    private async Task DecreaseQuantity()
    {
        if (quantity > 1)
        {
            quantity--;
            await listService.DeleteItemFromCart(product.Product_code);
            //await OnQuantityChanged.InvokeAsync();
        }
    }

    private async void IncreaseQuantity()
    {
        quantity++;
        await listService.AddProductToCart(product.Product_code);
        //await OnQuantityChanged.InvokeAsync();
    }

    private async void MoveToLater()
    {
        await listService.MoveProductFromCartToLater(product.Product_code);
        NavigationManager.NavigateTo("/login");
        NavigationManager.NavigateTo("/cart");
    }

    private async void Remove()
    {
        await listService.DeleteProductFromCart(product.Product_code);
        NavigationManager.NavigateTo("/login");
        NavigationManager.NavigateTo("/cart");
    }
}