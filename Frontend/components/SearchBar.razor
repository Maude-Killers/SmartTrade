@inject ProductService service
@inject NavigationManager nav

<form @onsubmit="HandleOnSubmit"
    class="flex max-w-md w-full items-center md:order-1 space-x-3 md:space-x-0 rtl:space-x-reverse ml-6">
    <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
    <div class="relative w-full">
        <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                fill="none" viewBox="0 0 20 20">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" />
            </svg>
        </div>
        <input type="search" id="default-search"
            class=" w-full block mx-auto p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            placeholder="Search Mockups, Logos..." @bind="searchValue" @bind:event="oninput" @onkeyup="OnTextHasChanged" autocomplete="off"
            required />
        <button type="submit"
            class="text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Search</button>

        @if (results.Count() > 0)
        {

            <div class="absolute w-full z-50 right-0 top-0 mt-12 rounded-md bg-white shadow-lg">
                @foreach (var result in results)
                {
                    <NavLink href="@($"/product/{result.Product_code}")"
                        class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:rounded-md" @onclick="HandleProductClick">
                        @result.Name
                    </NavLink>
                }
            </div>
        }
    </div>
</form>

@code {
    private string searchValue = "";
    private Timer? debounceTimer;
    private ProductDTO[] results = Array.Empty<ProductDTO>();

    private void OnTextHasChanged()
    {
        debounceTimer?.Dispose();
        debounceTimer = new Timer(HandleOnKeyUp, null, 500, Timeout.Infinite);
    }

    private void HandleOnSubmit()
    {
        results = Array.Empty<ProductDTO>();
        nav.NavigateTo($"/results/{searchValue}");
        searchValue = "";
    }

    private async void HandleOnKeyUp(Object? state)
    {
        results = await service.SearchProduct(searchValue) ?? Array.Empty<ProductDTO>();
        StateHasChanged();
    }

    private void HandleProductClick()
    {
        results = Array.Empty<ProductDTO>();
        StateHasChanged();
    }
}