@using SmartTrade.Models;
@inject HttpClient Http



<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <!-- Campo de Email -->
    <div class="flex items-center justify-between">
        <label for="email" class="mr-2 text-sm font-medium text-green-700 dark:text-green-500">Email</label>
        <input type="text" id="email" @bind="emailInput" class="flex-grow bg-green-50 border border-green-500 text-green-900 dark:text-green-400 placeholder-green-700 dark:placeholder-green-500 text-sm rounded-lg focus:ring-green-500 focus:border-green-500 block p-2.5 dark:bg-gray-700 dark:border-green-500" placeholder="Email">
    </div>

    <!-- Campo de Contraseña -->
    <div class="flex items-center justify-between">
        <label for="password" class="mr-2 text-sm font-medium text-green-700 dark:text-green-500">Contraseña</label>
        <input type="password" id="password" @bind="passwordInput" class="flex-grow bg-green-50 border border-green-500 text-green-900 dark:text-green-400 placeholder-green-700 dark:placeholder-green-500 text-sm rounded-lg focus:ring-green-500 focus:border-green-500 block p-2.5 dark:bg-gray-700 dark:border-green-500" placeholder="Contraseña">
    </div>
</div>





@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("/weatherforecast");
    }

    private string emailInput { get; set; }
    private string passwordInput { get; set; }
    private string successMessage { get; set; } = "";
    private string errorMessage { get; set; } = "";

    private void HandleSuccessInput(ChangeEventArgs e)
    {
        emailInput = e.Value.ToString(); // Actualizamos el valor de successInput
        if (!string.IsNullOrWhiteSpace(emailInput))
        {
            successMessage = "Some success message."; // Mostramos el mensaje de éxito si el campo no está vacío
        }
        else
        {
            successMessage = ""; // Limpiamos el mensaje si el campo está vacío
        }
    }

    private void HandleErrorInput(ChangeEventArgs e)
    {
        passwordInput = e.Value.ToString(); // Actualizamos el valor de errorInput
        if (!string.IsNullOrWhiteSpace(passwordInput))
        {
            errorMessage = "Some error message."; // Mostramos el mensaje de error si el campo no está vacío
        }
        else
        {
            errorMessage = ""; // Limpiamos el mensaje si el campo está vacío
        }
    }
}