@using Backend.Models;
@inject AuthService service
@inject NavigationManager nav
@inject HttpClient http

<section class="bg-gray-50 dark:bg-gray-900 flex-col">
    <div class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">
        <a href="#" class="flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white">
            Smart Trade
        </a>
        <div
            class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
            <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                    Inicio de Sesión
                </h1>
                <form class="space-y-4 md:space-y-6" @onsubmit="HandleSubmit">
                    <div>
                        <label for="email"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
                        <input type="email" name="email" id="email"
                            class="@($"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 {(string.IsNullOrEmpty(emailInput) ? "border-red-500" : "")}")"
                            placeholder="user@domain.com" required="" @bind-value="emailInput">
                        @if (string.IsNullOrEmpty(emailInput))
                        {
                            <label for="email" class="block mb-2 text-sm font-light text-red-600 dark:text-red-400">Email is
                                required</label>
                        }
                    </div>
                    <div>
                        <label for="contraseña"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Contraseña</label>
                        <input type="password" name="password" id="password"
                            class="@($"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 {(string.IsNullOrEmpty(passwordInput) ? "border-red-500" : "")}")"
                            placeholder="••••••••" required="" @bind-value="passwordInput">
                        @if (string.IsNullOrEmpty(passwordInput))
                        {
                            <label for="email" class="block mb-2 text-sm font-light text-red-600 dark:text-red-400">Password
                                is required</label>
                        }
                    </div>

                    <div class="flex items-center justify-between">
                        <div class="flex items-start">
                        </div>
                        <a href="#" class="text-sm font-light text-gray-500 hover:underline dark:text-gray-400">¿Te has
                            olvidado de tu contraseña?
                        </a>
                    </div>
                    <button type="submit"
                        class="w-full text-white bg-gray-600 hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm w-auto sm:w-auto px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800">Iniciar
                        Sesión 
                    </button>
                    <p class="text-sm font-light text-gray-500 dark:text-gray-400">
                        ¿No tienes una cuenta? <a href="#">
                        <a href="/register"
                            class="font-medium text-primary-600 hover:underline dark:text-primary-500" >Registrarse</a>
                        </a>
                    </p>
                </form>
            </div>
        </div>
    </div>
</section>

@code {
    private string emailInput { get; set; } = "";
    private string passwordInput { get; set; } = "";
    private string? errorMessage { get; set; }
    private async void HandleSubmit()
    {
        bool loginSuccess = await service.Login(emailInput, passwordInput);
        if (loginSuccess)
        {
            nav.NavigateTo("/wishlist");
        }
        else
        {
            errorMessage = "Login failed. Please check your credentials and try again.";
        }
        
    }
}